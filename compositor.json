{
  "name": "sotojuan/fugot",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.25"
  },
  "title": "fugot",
  "branch": "master",
  "style": {
    "name": "Swiss",
    "componentSet": {
      "nav": "nav/BasicNav",
      "header": "header/SwissHeader",
      "article": "article/SwissArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "\"Helvetica Neue\", Helvetica, Arial, sans-serif",
    "heading": {
      "fontWeight": 700,
      "letterSpacing": "-0.01em"
    },
    "layout": {
      "fluid": true
    },
    "colors": {
      "text": "#000",
      "background": "#fff",
      "primary": "#05a",
      "secondary": "#444",
      "highlight": "#f30",
      "border": "#ccc",
      "muted": "#eee"
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/sotojuan/fugot",
          "text": "GitHub"
        },
        {
          "href": "https://npmjs.com/package/fugot",
          "text": "npm"
        }
      ]
    },
    {
      "component": "header",
      "heading": "fugot",
      "subhead": "Like `got` but with futures",
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "fugot: Like `got` but with futures",
          "url": ""
        },
        {
          "component": "ui/GithubButton",
          "user": "sotojuan",
          "repo": "fugot"
        }
      ],
      "text": "v0.3.3"
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "\n<p><a href=\"https://travis-ci.org/sotojuan/fugot\"><img src=\"https://travis-ci.org/sotojuan/fugot.svg?branch=master\"></a></p>\n<blockquote>\n<p>Like <a href=\"https://github.com/sindresorhus/got\"><code>got</code></a> but with <a href=\"https://github.com/fluture-js/Fluture\">Futures</a></p>\n</blockquote>\n<p>This library is a port of the excellent <code>got</code> Node HTTP client that returns Futures instead of Promises, provided by the also excellent <a href=\"https://github.com/fluture-js/Fluture\">Fluture</a> library.</p>\n<p>Please note that unlike <code>got</code>, <code>fugot</code> <strong>does not support streams</strong> as it&apos;s focused on being a Future-returning client for Node.</p>\n<h2>Install</h2>\n<pre>$ npm <span class=\"hljs-keyword\">install</span> <span class=\"hljs-comment\">--save fugot</span></pre><h2>Why Futures?</h2>\n<p>Futures offer an interesting alternative to Promises with the following features:</p>\n<ul>\n<li><a href=\"https://github.com/fluture-js/Fluture/wiki/Comparison-to-Promises#eagerness-vs-laziness\">Lazy evaluation</a></li>\n<li><a href=\"https://github.com/fantasyland/fantasy-land\">Fantasy Land</a> spec compliance</li>\n<li><a href=\"https://github.com/fluture-js/Fluture#future\">Cancellation</a></li>\n<li><a href=\"https://github.com/fluture-js/Fluture#resource-management\">Resource management</a></li>\n</ul>\n<p>Fluture offers a nice API that provides <a href=\"https://github.com/fluture-js/Fluture#transforming-futures\">transformation</a>, <a href=\"https://github.com/fluture-js/Fluture#error-handling\">error handling</a>, and <a href=\"https://github.com/fluture-js/Fluture#parallelism\">parallelism</a> methods.</p>\n<p>For a more in-depth comparison, see <a href=\"https://github.com/fluture-js/Fluture/wiki/Comparison-to-Promises\">Fluture&apos;s wiki</a>.</p>\n<h2>Usage</h2>\n<pre><span class=\"hljs-keyword\">const</span> fugot = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;fugot&apos;</span>)\n<span class=\"hljs-comment\">// Because you&apos;ll probably be making your own Futures, they&apos;re exposed by `fugot`</span>\n<span class=\"hljs-keyword\">const</span> Future = fugot.Future\n\n<span class=\"hljs-comment\">// Requests don&apos;t run until you call `fork`</span>\n<span class=\"hljs-keyword\">const</span> firstName = fugot(<span class=\"hljs-string\">&apos;http://api.randomuser.me&apos;</span>, {<span class=\"hljs-attr\">json</span>: <span class=\"hljs-literal\">true</span>})\n  .map(<span class=\"hljs-function\"><span class=\"hljs-params\">data</span> =&gt;</span> data.body.results[<span class=\"hljs-number\">0</span>])\n  .map(<span class=\"hljs-function\"><span class=\"hljs-params\">result</span> =&gt;</span> result.name.first)\n\n<span class=\"hljs-comment\">// Prints a random first name</span>\nfirstName.fork(<span class=\"hljs-built_in\">console</span>.error, <span class=\"hljs-built_in\">console</span>.log)\n\n<span class=\"hljs-comment\">// Call the function returned by `fork` to cancel a request</span>\n<span class=\"hljs-keyword\">const</span> cancel = firstName.fork(<span class=\"hljs-built_in\">console</span>.error, <span class=\"hljs-built_in\">console</span>.log)\n<span class=\"hljs-comment\">// Nothing should be printed unless you comment the following out</span>\ncancel()</pre><h3>API</h3>\n<p>These docs are copied from <code>got</code> with appropiate modifications.</p>\n<h4>fugot(url, [options])</h4>\n<p>A <code>GET</code> request by default, but that can be changed in <code>options</code>.</p>\n<p>Returns a Future for a <code>response</code> object with a <code>body</code> property, a <code>url</code> property with the request URL or the final URL after redirects, and a <code>requestUrl</code> property with the original request URL.</p>\n<h5>url</h5>\n<p>Type: <code>string</code>, <code>object</code></p>\n<p>The URL to request or a <a href=\"https://nodejs.org/api/http.html#http_http_request_options_callback\"><code>http.request</code> options</a> object.</p>\n<p>Properties from <code>options</code> will override properties in the parsed <code>url</code>.</p>\n<h5>options</h5>\n<p>Type: <code>object</code></p>\n<p>Any of the <a href=\"http://nodejs.org/api/http.html#http_http_request_options_callback\"><code>http.request</code></a> options.</p>\n<h6>body</h6>\n<p>Type: <code>string</code>, <code>buffer</code>, <code>readableStream</code>, <code>object</code></p>\n<p>Body that will be sent with a <code>POST</code> request.</p>\n<p>If present in <code>options</code> and <code>options.method</code> is not set, <code>options.method</code> will be set to <code>POST</code>.</p>\n<p>If <code>content-length</code> or <code>transfer-encoding</code> is not set in <code>options.headers</code> and <code>body</code> is a string or buffer, <code>content-length</code> will be set to the body length.</p>\n<p>If <code>body</code> is a plain object, it will be stringified with <a href=\"https://nodejs.org/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options\"><code>querystring.stringify</code></a> and sent as <code>application/x-www-form-urlencoded</code>.</p>\n<h6>encoding</h6>\n<p>Type: <code>string</code>, <code>null</code><br>\nDefault: <code>&apos;utf8&apos;</code></p>\n<p>Encoding to be used on <code>setEncoding</code> of the response data. If <code>null</code>, the body is returned as a Buffer.</p>\n<h6>json</h6>\n<p>Type: <code>boolean</code><br>\nDefault: <code>false</code></p>\n<p>Parse response body with <code>JSON.parse</code> and set <code>accept</code> header to <code>application/json</code>.</p>\n<h6>query</h6>\n<p>Type: <code>string</code>, <code>object</code><br></p>\n<p>Query string object that will be added to the request URL. This will override the query string in <code>url</code>.</p>\n<h6>timeout</h6>\n<p>Type: <code>number</code>, <code>object</code></p>\n<p>Milliseconds to wait for a server to send response headers before aborting request with <code>ETIMEDOUT</code> error.</p>\n<p>Option accepts <code>object</code> with separate <code>connect</code> and <code>socket</code> fields for connection and socket inactivity timeouts</p>\n<h6>retries</h6>\n<p>Type: <code>number</code>, <code>function</code><br>\nDefault: <code>5</code></p>\n<p>Number of request retries when network errors happens. Delays between retries counts with function <code>1000 * Math.pow(2, retry) + Math.random() * 100</code>, where <code>retry</code> is attempt number (starts from 0).</p>\n<p>Option accepts <code>function</code> with <code>retry</code> and <code>error</code> arguments. Function must return delay in milliseconds (<code>0</code> return value cancels retry).</p>\n<p><strong>Note:</strong> if <code>retries</code> is <code>number</code>, <code>ENOTFOUND</code> and <code>ENETUNREACH</code> error will not be retried (see full list in <a href=\"https://github.com/floatdrop/is-retry-allowed/blob/master/index.js#L12\"><code>is-retry-allowed</code></a> module).</p>\n<h6>followRedirect</h6>\n<p>Type: <code>boolean</code><br>\nDefault: <code>true</code></p>\n<p>Defines if redirect responses should be followed automatically.</p>\n<h2>Thanks</h2>\n<ul>\n<li><a href=\"https://github.com/sindresorhus\">Sindre Sorhus</a> for <code>got</code> and the docs</li>\n<li><a href=\"https://github.com/fluture-js/Fluture\">Aldwin Vlasblom</a> for <code>fluture</code></li>\n</ul>\n<h2>License</h2>\n<p>MIT &#xA9; <a href=\"https://juansoto.me\">Juan Soto</a></p>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/sotojuan/fugot",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/sotojuan",
          "text": "sotojuan"
        }
      ]
    }
  ]
}